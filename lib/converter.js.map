{"version":3,"sources":["../src/converter.js"],"names":["mapping","svg","Svg","circle","Circle","ellipse","Ellipse","g","G","line","Line","path","Path","rect","Rect","symbol","Symbol","text","Text","polygon","Polygon","polyline","Polyline","linearGradient","LinearGradient","radialGradient","RadialGradient","use","Use","defs","Defs","stop","Stop","extractViewbox","markup","viewBox","attributes","Object","values","filter","attr","name","vbSplits","value","split","width","height","getCssRulesForAttr","cssRules","rules","idname","rule","selectors","indexOf","className","addNonCssAttributes","cssPropsResult","attrs","forEach","propertyName","cssProps","push","findApplicableCssProps","config","length","declarations","declaration","property","findId","id","find","traverse","i","nodeName","tagName","idName","omitById","includes","fill","additionalProps","Elem","toLowerCase","children","childNodes","data","map","child","node","elemAttributes","k","Math","random","onClickEvents","clickEvent","e","onPress","dom","cssAst","stylesheet","documentElement"],"mappings":"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","file":"converter.js","sourcesContent":["import React from \"react\";\nimport camelCase from \"camelcase\";\n\nimport Svg, {\n  Circle,\n  Ellipse,\n  G,\n  LinearGradient,\n  RadialGradient,\n  Line,\n  Path,\n  Polygon,\n  Polyline,\n  Rect,\n  Symbol,\n  Text,\n  Use,\n  Defs,\n  Stop\n} from \"react-native-svg\";\n\nconst mapping = {\n  svg: Svg,\n  circle: Circle,\n  ellipse: Ellipse,\n  g: G,\n  line: Line,\n  path: Path,\n  rect: Rect,\n  symbol: Symbol,\n  text: Text,\n  polygon: Polygon,\n  polyline: Polyline,\n  linearGradient: LinearGradient,\n  radialGradient: RadialGradient,\n  use: Use,\n  defs: Defs,\n  stop: Stop\n};\n\nfunction extractViewbox(markup) {\n  const viewBox = markup.attributes\n    ? Object.values(markup.attributes).filter(\n        (attr) => attr.name === \"viewBox\"\n      )[0]\n    : false;\n\n  const vbSplits = viewBox ? viewBox.value.split(\" \") : false;\n  if (!vbSplits) {\n    return {};\n  }\n\n  return {\n    width: `${vbSplits[2]}`,\n    height: `${vbSplits[3]}`,\n    viewBox: viewBox.value\n  };\n}\n\nfunction getCssRulesForAttr(attr, cssRules) {\n  let rules = [];\n  if (attr.name === \"id\") {\n    const idname = \"#\" + attr.value;\n\n    rules = cssRules.filter((rule) => {\n      if (rule.selectors.indexOf(idname) > -1) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n  } else if (attr.name === \"class\") {\n    const className = \".\" + attr.value;\n    rules = cssRules.filter((rule) => {\n      if (rule.selectors.indexOf(className) > -1) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n  }\n\n  return rules;\n}\n\nfunction addNonCssAttributes(markup, cssPropsResult) {\n  // again look at the attributes and pick up anything else that is not related to CSS\n  const attrs = [];\n  Object.values(markup.attributes).forEach((attr) => {\n    if (!attr || !attr.name) {\n      return;\n    }\n\n    const propertyName = camelCase(attr.name);\n    if (propertyName === \"class\" || propertyName === \"id\") {\n      return;\n    }\n\n    if (cssPropsResult.cssProps.indexOf(propertyName) > -1) {\n      return;\n    }\n\n    attrs.push({\n      name: propertyName,\n      value: `${attr.value}`\n    });\n  });\n\n  return attrs;\n}\n\nfunction findApplicableCssProps(markup, config) {\n  const cssProps = [];\n  const attrs = [];\n  Object.values(markup.attributes).forEach((attr) => {\n    const rules = getCssRulesForAttr(attr, config.cssRules);\n    if (rules.length === 0) {\n      return;\n    }\n\n    rules.forEach((rule) => {\n      rule.declarations.forEach((declaration) => {\n        const propertyName = camelCase(declaration.property);\n        attrs.push({\n          name: propertyName,\n          value: `${declaration.value}`\n        });\n        cssProps.push(propertyName);\n      });\n    });\n  });\n  return { cssProps, attrs };\n}\n\nfunction findId(markup) {\n  const id = Object.values(markup.attributes).find(\n    (attr) => attr.name === \"id\"\n  );\n  return id && id.value;\n}\n\nfunction traverse(markup, config, i = 0) {\n  if (!markup || !markup.nodeName || !markup.tagName) {\n    return null;\n  }\n  const tagName = markup.nodeName;\n  const idName = findId(markup);\n  if (idName && config.omitById && config.omitById.includes(idName)) {\n    return null;\n  }\n\n  let attrs = [];\n  if (tagName === \"svg\") {\n    const viewBox = extractViewbox(markup);\n    attrs.push({\n      name: \"width\",\n      value: config.width || viewBox.width\n    });\n    attrs.push({\n      name: \"height\",\n      value: config.height || viewBox.height\n    });\n    attrs.push({\n      name: \"viewBox\",\n      value: config.viewBox || viewBox.viewBox || \"0 0 50 50\"\n    });\n    attrs.push({\n      name: \"fill\",\n      value: config.fill || \"none\"\n    });\n  } else {\n    // otherwise, if not SVG, check to see if there is CSS to apply.\n    const cssPropsResult = findApplicableCssProps(markup, config);\n    const additionalProps = addNonCssAttributes(markup, cssPropsResult);\n    // add to the known list of total attributes.\n    attrs = [...attrs, ...cssPropsResult.attrs, ...additionalProps];\n  }\n\n  // map the tag to an element.\n  const Elem = mapping[tagName.toLowerCase()];\n\n  // Note, if the element is not found it was not in the mapping.\n  if (!Elem) {\n    return null;\n  }\n\n  const children =\n    Elem === Text && markup.childNodes.length === 1\n      ? markup.childNodes[0].data\n      : markup.childNodes.length\n      ? Object.values(markup.childNodes)\n          .map((child) => {\n            return traverse(child, config, ++i);\n          })\n          .filter((node) => {\n            return !!node;\n          })\n      : [];\n\n  const elemAttributes = {};\n  attrs.forEach((attr) => {\n    elemAttributes[attr.name] = attr.value;\n  });\n\n  const k = i + Math.random();\n\n  if (config.onClickEvents && idName) {\n    const clickEvent = config.onClickEvents.find((e) => e.id === idName);\n    if (clickEvent) {\n      return (\n        <Elem {...elemAttributes} key={k} onPress={clickEvent.onPress}>\n          {children}\n        </Elem>\n      );\n    }\n  }\n\n  return (\n    <Elem {...elemAttributes} key={k}>\n      {children}\n    </Elem>\n  );\n}\n\nexport {\n  extractViewbox,\n  getCssRulesForAttr,\n  findApplicableCssProps,\n  addNonCssAttributes\n};\n\nexport default (dom, cssAst, config) => {\n  config = Object.assign({}, config, {\n    cssRules: (cssAst && cssAst.stylesheet && cssAst.stylesheet.rules) || []\n  });\n  return traverse(dom.documentElement, config);\n};\n"]}